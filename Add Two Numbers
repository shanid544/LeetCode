/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        
        ListNode head = new ListNode(0);
        ListNode Rnode = head;
        int carry = 0;
        while(l1!=null || l2!=null){
            int l1v =(l1!= null)?l1.val:0;
            int l2v =(l2!= null)?l2.val:0;
            
            int sum = l1v+l2v+carry;
            carry = sum/10;
            int lastDigit = sum%10;
            
            ListNode node = new ListNode(lastDigit);
            Rnode.next=node;
            
            if(l1!=null)l1=l1.next;
            if(l2!=null)l2=l2.next;
            Rnode=Rnode.next;
            
            
        }
        if(carry>0){
            ListNode node = new ListNode(carry);
            Rnode.next=node;
            Rnode=Rnode.next;
        }
     return head.next;   
    }
    
}
